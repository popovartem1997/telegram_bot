from imp import bot, connection
from telebot import types
from buttons import download_b, support_b, able_b, reviews_b, comment_b, admin_b, \
    link_ch_b, post_ch_b, able_ch_b, instr_ch_b, back_a, reviews_ch_b, reviews_rch_b, view_reviews_b
from imp import cursor
import logging

logging.basicConfig(filename='log.txt', level = logging.ERROR)

@bot.message_handler(commands=['hf'])
def change_info(message):
    try:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(link_ch_b)
        markup.add(post_ch_b)
        markup.add(able_ch_b)
        markup.add(instr_ch_b)
        markup.add(reviews_ch_b)
        markup.add(reviews_rch_b)
        markup.add(view_reviews_b)
        bot.send_message(message.chat.id, '‚¨áÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é  ‚¨áÔ∏è', reply_markup=markup)
    except:
        logging.exception('-----------------------------------------------')


@bot.message_handler(commands=['start'])
def main_menu(message):
    try:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(download_b, support_b)
        markup.add(able_b, reviews_b)
        markup.add(comment_b)
        markup.add(admin_b)
        bot.send_message(message.chat.id, '‚¨áÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é  ‚¨áÔ∏è', reply_markup=markup)
    except:
        logging.exception('-----------------------------------------------')


@bot.message_handler(content_types=["text"])
def admin(message):
    try:
        if message.text == 'üì± –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º':
            inline = types.InlineKeyboardMarkup()
            url = types.InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞', url=select('data', 'const_info', 1))
            inline.add(url)
            bot.send_message(message.chat.id, '–î–ª—è —Å–≤–∑—è–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ üëá', reply_markup=inline)

        elif message.text == '‚úÖ –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ':
            inline = types.InlineKeyboardMarkup()
            url = types.InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞', url=select('data', 'const_info', 2))
            inline.add(url)
            bot.send_message(message.chat.id, '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–∞—Ä–∫–µ—Ç –Ω–∞–∂–º–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ üëá', reply_markup=inline)

        elif message.text == 'üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞':
            bot.send_message(message.chat.id, '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É: üëá\n\n' \
                             + select('data', 'const_info', 3).replace(r"\n", '\n'))

        elif message.text == 'üí™ –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç!':
            bot.send_message(message.chat.id, select('data', 'const_info', 4).replace(r"\n", '\n'))

        elif message.text == 'üìù –û—Ç–∑—ã–≤—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤':
            bot.send_message(message.chat.id, '–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –æ—Ç–∑—ã–≤—ã üëá\n')
            select_reviews(message)

        elif message.text == '‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∑–∞–ø—É—Å–∫—É':
            bot.send_message(message.chat.id, select('data', 'const_info', 5).replace(r"\n", '\n'))

        elif message.text == '‚ôªÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id,
                                   '–°–µ–π—á–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —ç—Ç–∞ —Å—Å—ã–ª–∫–∞:\n\n' + 'üëâ' + select('data', 'const_info', 2) + 'üëà\n\n' \
                                                                                                                 '‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá',
                                   reply_markup=markup)
            bot.register_next_step_handler(msg, change_link)

        elif message.text == '‚ôªÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id,
                                   '–°–µ–π—á–∞—Å –∞–¥—Ä–µ—Å —ç–ª.–ø–æ—á—Ç—ã —Ç–∞–∫–æ–π:\n\n' + 'üëâ' + select('data', 'const_info', 3) + 'üëà\n\n' \
                                   + '‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã üëá', reply_markup=markup)
            bot.register_next_step_handler(msg, change_emai)

        elif message.text == "‚ôªÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å '–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç'":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id, "‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ '–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç' üëá", reply_markup=markup)
            bot.register_next_step_handler(msg, change_able)

        elif message.text == '‚ôªÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id, "‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üëá", reply_markup=markup)
            bot.register_next_step_handler(msg, change_inst)

        elif message.text == '‚ôªÔ∏è–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id, "‚ùóÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ üëá", reply_markup=markup)
            bot.register_next_step_handler(msg, change_reviews)

        elif message.text == '‚ôªÔ∏è–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            msg = bot.send_message(message.chat.id, "‚ùóÔ∏è–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ id –æ—Ç–∑—ã–≤–∞ üëá", reply_markup=markup)
            bot.register_next_step_handler(msg, rechange_reviews)

        elif message.text == '‚ôªÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(back_a)
            bot.send_message(message.chat.id, '‚ùóÔ∏è–°–ø–∏—Å–æ–∫ —Ç–µ–∫—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ (id+—Ç–µ–∫—Å—Ç) üëá\n', reply_markup=markup)
            select_reviews_ch(message)

        elif message.text == '‚ôªÔ∏è–ù–∞–∑–∞–¥':
            change_info(message)
    except:
        logging.exception('-----------------------------------------------')


def change_reviews(message):
    try:
        a = []
        cursor.execute('SELECT id from reviews')
        for i in cursor.fetchall():
            a.append(str(i).replace('(', '').replace(')', '').replace(',', ''))
        cursor.execute("INSERT INTO reviews VALUES(%s, %s)", (int(max(a)) + 1, message.text))
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')

def rechange_reviews(message):
    try:
        cursor.execute("DELETE FROM reviews WHERE id = %s", message.text)
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')

def change_link(message):
    try:
        cursor.execute("UPDATE const_info SET data = %s WHERE id = 2", message.text)
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')


def change_emai(message):
    try:
        cursor.execute("UPDATE const_info SET data = %s WHERE id = 3", message.text)
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')


def change_able(message):
    try:
        cursor.execute("UPDATE const_info SET data = %s WHERE id = 4", message.text)
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')


def change_inst(message):
    try:
        cursor.execute("UPDATE const_info SET data = %s WHERE id = 5", message.text)
        connection.commit()
        bot.send_message(message.chat.id, '‚úÖ –£—Å–ø–µ—à–Ω–æ.')
    except:
        logging.exception('-----------------------------------------------')


def select_reviews_ch(message):
    try:
        b = []
        cursor.execute("SELECT id, data from reviews")
        for i in cursor.fetchall():
            a = str(i[1]).replace('(', '').replace(')', '').replace(',', '').replace("'", '').replace("'", '')
            bot.send_message(message.chat.id, str(i[0]) + '\n' + a)
    except:
        logging.exception('-----------------------------------------------')


def select_reviews(message):
    try:
        b = []
        cursor.execute("SELECT data from reviews")
        for i in cursor.fetchall():
            a = str(i).replace('(', '').replace(')', '').replace(',', '').replace("'", '').replace("'", '')
            bot.send_message(message.chat.id, a)
    except:
        logging.exception('-----------------------------------------------')

def select(data, table, id):
    try:
        cursor.execute("SELECT {0} from {1} WHERE id='{2}'".format(data, table, id))
        a = str(cursor.fetchone()).replace('(', '').replace(')', '').replace(',', '').replace("'", '').replace("'", '')
        return a
    except:
        logging.exception('-----------------------------------------------')


bot.polling(none_stop=True)
